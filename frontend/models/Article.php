<?php


namespace frontend\models;


use yii\db\ActiveRecord;


class Article extends ActiveRecord
{
    public static function tableName()
    {
        return 'article';
    }

    public function rules()
    {
        return [
            [['id', 'category_id', 'user_id'], 'integer'],
            [['title', 'descr', 'content', 'img', 'date_posted'], 'safe'],
        ];
    }



    public function saveImage($filename)
    {
        $this->image = $filename;
        return $this->save(false);
    }

    public function getImage()
    {
        //return ($this->image) ? '/uploads/' . $this->image : '/no-image.png';
        return 'C:/xampp/htdocs' . Yii::getAlias('@web') . '/uploads/' . $this->image;
    }

    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }
    /*

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
    */

    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    public function getLike(){
        return $this->hasMany(Like::className(),['article_id'=>'id']);
    }

    public function getComment(){
        return $this->hasMany(Comment::className(),['article_id'=>'id']);
    }


    public function saveCategory($category_id)
    {
        $category = Category::findOne($category_id);
        if($category != null)
        {
            $this->link('category', $category);
            return true;
        }
    }
}